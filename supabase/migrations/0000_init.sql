-- Initial database schema for HR360+

-- EXTENSIONS
create extension if not exists "uuid-ossp";

-- TYPES
create type public.employee_status as enum ('Remote', 'Office', 'Leave', 'Probation');
create type public.applicant_status as enum ('New', 'Pending Review', 'Screening', 'Interview Scheduled', 'Offer Extended', 'Hired', 'Rejected', 'Applied');
create type public.job_status as enum ('Accepting Applications', 'Screening', 'Interviewing', 'Offer Extended', 'Closed');
create type public.job_source as enum ('LinkedIn', 'Company Website', 'Indeed', 'Naukri', 'Other', 'Walk-in');
create type public.college_status as enum ('Invited', 'Confirmed', 'Screening', 'Scheduled');
create type public.document_type as enum ('Policy', 'Training', 'Manual');
create type public.document_status as enum ('Active', 'Draft', 'Archived');
create type public.grievance_category as enum ('Payroll', 'Facilities', 'Interpersonal', 'Policy', 'Feedback', 'Other');
create type public.grievance_status as enum ('Open', 'In Progress', 'Resolved', 'Closed');
create type public.grievance_assignee as enum ('HR', 'Legal');


-- TABLES

-- employees table
create table public.employees (
    id bigint primary key generated by default as identity,
    name text not null,
    role text not null,
    email text not null unique,
    status public.employee_status not null default 'Office',
    avatar_url text,
    points integer not null default 0,
    created_at timestamp with time zone not null default now()
);

-- applicants table
create table public.applicants (
    id bigint primary key generated by default as identity,
    full_name text not null,
    email text not null unique,
    phone text,
    role text not null,
    status public.applicant_status not null default 'New',
    source public.job_source not null default 'Other',
    college text,
    resume_text text,
    resume_summary text,
    aptitude_score text,
    typing_wpm integer,
    typing_accuracy integer,
    hr_notes text,
    assigned_test text,
    created_at timestamp with time zone not null default now()
);

-- jobs table
create table public.jobs (
    id bigint primary key generated by default as identity,
    title text not null,
    department text not null,
    location text not null,
    status public.job_status not null default 'Accepting Applications',
    source public.job_source not null default 'Other',
    applicants_count integer not null default 0,
    created_at timestamp with time zone not null default now()
);

-- colleges table
create table public.colleges (
    id bigint primary key generated by default as identity,
    name text not null unique,
    location text not null,
    status public.college_status not null default 'Invited',
    resumes_received integer not null default 0,
    contact_email text,
    created_at timestamp with time zone not null default now()
);

-- documents table
create table public.documents (
    id bigint primary key generated by default as identity,
    name text not null,
    type public.document_type not null default 'Policy',
    version text not null,
    status public.document_status not null default 'Draft',
    acknowledgement_percentage integer not null default 0,
    expiry_date date,
    created_at timestamp with time zone not null default now(),
    unique(name, version)
);

-- grievances table
create table public.grievances (
    ticket_id text primary key default 'TKT-' || substr(uuid_generate_v4()::text, 1, 6),
    title text not null,
    description text,
    category public.grievance_category not null default 'Other',
    status public.grievance_status not null default 'Open',
    assigned_to public.grievance_assignee not null default 'HR',
    is_anonymous boolean not null default false,
    created_at timestamp with time zone not null default now()
);

-- kudos table
create table public.kudos (
    id bigint primary key generated by default as identity,
    giver_name text not null,
    receiver_name text not null,
    reason_text text not null,
    reason_category text not null,
    points_awarded integer not null default 10,
    created_at timestamp with time zone not null default now()
);

-- analytics table
create table public.analytics (
    id bigint primary key generated by default as identity,
    attritionPrediction text not null,
    burnoutHeatmap text not null,
    salaryBenchmarks text not null,
    keyInsights text not null,
    created_at timestamp with time zone not null default now()
);


-- POLICIES
-- 1. Enable RLS
alter table public.employees enable row level security;
alter table public.applicants enable row level security;
alter table public.jobs enable row level security;
alter table public.colleges enable row level security;
alter table public.documents enable row level security;
alter table public.grievances enable row level security;
alter table public.kudos enable row level security;
alter table public.analytics enable row level security;

-- 2. Create Policies
-- Allow public read-write access for demo purposes.
-- In a real production app, you would have more restrictive policies based on user roles.
create policy "Public full access" on public.employees for all using (true) with check (true);
create policy "Public full access" on public.applicants for all using (true) with check (true);
create policy "Public full access" on public.jobs for all using (true) with check (true);
create policy "Public full access" on public.colleges for all using (true) with check (true);
create policy "Public full access" on public.documents for all using (true) with check (true);
create policy "Public full access" on public.grievances for all using (true) with check (true);
create policy "Public full access" on public.kudos for all using (true) with check (true);
create policy "Public full access" on public.analytics for all using (true) with check (true);
